services:
  rabbitmq:
    image: rabbitmq:4.1.2-management
    container_name: rabbitmq
    hostname: sm-rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - sm-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - mongodb_data:/data/db
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - sm-network

  agent:
    build: ./agent
    container_name: agent
    environment:
      - API_KEY=${API_KEY}
      - BASE_URL=${BASE_URL}
    ports:
      - 8000:8000
    depends_on:
      - alert-manager
    networks:
      - sm-network

  data-collector:
    build: ./backend/data-collector
    container_name: data-collector
    environment:
      - SPRING_APPLICATION_NAME=data-collector
      - MONGO_URI=${MONGO_URI}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    ports:
      - '8081:8081'
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - sm-network

  rule-engine:
    build: ./backend/rule-engine
    container_name: rule-engine
    environment:
      - SPRING_APPLICATION_NAME=rule-engine
      - MONGO_URI=${MONGO_URI}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    ports:
      - '8082:8082'
    networks:
      - sm-network

  alert-manager:
    build: ./backend/alert-manager
    container_name: alert-manager
    environment:
      - SPRING_APPLICATION_NAME=alert-manager
      - MONGO_URI=${MONGO_URI}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    ports:
      - '8083:8083'
    networks:
      - sm-network

  log-service:
    build: ./backend/log-service
    container_name: log-service
    depends_on:
      rabbitmq:
        condition: service_healthy
        restart: true
      data-collector:
        condition: service_started
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - COLLECTOR_SERVICE_URL=http://data-collector:8081/api/logs
    networks:
      - sm-network

  metrics-service:
    build: ./backend/metrics-service
    container_name: metrics-service
    depends_on:
      rabbitmq:
        condition: service_healthy
      data-collector:
        condition: service_started
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - COLLECTOR_SERVICE_URL=http://data-collector:8081/api/metrics
    networks:
      - sm-network

  security-service:
    build: ./backend/security-service
    container_name: security-service
    depends_on:
      rabbitmq:
        condition: service_healthy
      data-collector:
        condition: service_started
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - COLLECTOR_SERVICE_URL=http://data-collector:8081/api/security-events
    networks:
      - sm-network

  client:
    build: ./client
    container_name: client
    ports:
      - '3000:80'
    depends_on:
      log-service:
        condition: service_started
      metrics-service:
        condition: service_started
      security-service:
        condition: service_started
    networks:
      - sm-network

networks:
  sm-network:
    driver: bridge

volumes:
  rabbitmq_data:
  mongodb_data:
